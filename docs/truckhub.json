{
  "$schema": "http://json-schema.org/draft-04/schema#",

  "title": "TruckHub",

  "description" : "Represents the properties of a TruckHub",

  "type": "object",

  "properties": {
    "hub": { 
      "type": "string",
      "description": "A single word name of the directory containing the track hub files. Not displayed to hub users",
      "pattern": "^[a-zA-z0-9]+$"
    },

    "shortLabel": { 
      "type": "string",
      "description": "The short name for the track hub. Displayed as the hub name on the Track Hubs page and the track group name on the browser tracks page",
      "maxLength": 17
    },

    "longLabel": {
      "type": string,
      "description": "A longer descriptive label for the track hub. Displayed in the description field on the Track Hubs page",
      "maxLength": 80
    },

    "email": { 
      "format": "email",
      "description": "The contact to whom questions regarding the track hub should be directed",
    },

    "genomes": {
      "type": "array",
      "description": "The set of genome assemblies this hub contains data for",
      "items" : { "$ref": "#/definitions/assembly" },
      "minItems": 1,
      "uniqueItems": true
    },

    "additionalProperties": { "type": "string" }    
  },

  "required": [""],

  "definitions": {

    "assembly": {
      "type": "object",

      "description": "The container for the display and configuration properties for each track in a particular genome assembly",

      "properties": {
        "id": { 
	  "type": "string",
	  "description": "A tag used to identify the genome assembly"
	},

	"tracks": {
	  "type": "array",
	  "items": { 
	    "oneOf": [
	      "$ref": "#/definitions/bigBed_track",
	      "$ref": "#/definitions/bigWig_track",
	      "$ref": "#/definitions/bam_track",
	      "$ref": "#/definitions/vcfTabix_track",
	      "$ref": "#/definitions/composite_track",
	      "$ref": "#/definitions/super_track",
	      "$ref": "#/definitions/aggregate_track"
	    ]
	  },
	  "minItems": 1,
	  "uniqueItems": true
	}
      }
    },

    "bigBed_track": {
      "allOf": [
        { "$ref": "#/definitions/track" },

	{ "properties": {
	    "type": { 
	      "type": "string", 

	      "enum": [ "bigBed" ] 
	    }, 

	    "standard_fields": {
	      "type": "number",

	      "minimum": 3,
	      "exclusiveMinimum": false,

	      "maximum": 12,
	      "exclusiveMaximum": false,
	    },

	    "non_standard_fields": { "type": "boolean" },

	    "bigDataUrl": { "$ref": "#/definitions/bigDataUrl" },

	    "colorByStrand": {
	      "type": "array",

	      "description": "To color items differently by the strand they align to. The first color will be used for plus strand alignments and the second for the minus strand. This setting is incompatible with spectrum and all items on the same strand will have the same color, regardless of the item's score.",

	      "items": [
	        { "$ref": "#/definitions/color" },
		{ "$ref": "#/definitions/color" }
	      ]
	    },

	    "denseCoverage": {
	      "type": "number",

	      "description": "Type bigBed tracks in dense mode do a density plot based on maximum coverage seen at each pixel. The maxVal corresponds to the count at which the plot reaches maximum darkness. If maxVal is 0 then this will be calculated from the data itself.",

	      "minimum": 0
	    },

	    "exonArrows": {
	      "type": "boolean",

	      "description": "On tracks that show exons or blocks within features, exon arrows allow the user to jump to the next exon or block outside the image. Exon arrows are typically shown by default in these types of tracks, with the exception of tracks in the Regulation group. The arrows can be explicitly shown or hidden using this setting. "
	    },

	    "scoreFilter": { "$ref": "#/definitions/scoreFilter" },

	    "itemRgb": {
	      "type": "boolean",

	      "description": "In bed formats supporting at least 9 standard bed fields, this setting can be used to activate item coloring using the value in the ninth field, itemRgb. The value of the item field must be an R,G,B triplet. When loaded into a table, this field appears as an integer with the RGB values in specific bits of the integer."
	    },

	    "maxItems": { 
	      "type": "integer",

	      "description": "Maximum number of items to display individually in full mode. When the maximum is exceeded, the excess items are drawn on top of one another on the last line. In packed mode this refers to the number of lines rather than number of items. Default: 250. For type bigBed tracks, this setting can never be larger than than 100,000."
	    },

	    "maxWindowToDraw": { 
	      "type": "integer",

	      "description": "When too many individual bed items are shown in the Browser image (such as might occur when a large region of a chromosome is viewed), the information is often better visualized as a summary in dense mode. Depending on the current visibility of the bed track and which other tracks are being shown concurrently, the Browser may automatically reduce the display to pack or dense mode. This setting allows you to force the data summarization at whatever display limit you consider reasonable. Unlike the maxItems setting, which controls the display of vertical space, this setting dictates the number of bases to be displayed horizontally in a window before the track is forced into dense mode. There is no default for this setting, but the maxItems setting will ultimately prevent too many items from being displayed."
	    },

	    "minGrayLevel": {
	      "type": "integer",

	      "description": "When a bed track contains the standard field score, and when that score is used to present items in gray or color scale (see spectrum), this setting specifies the lightest shade to be used. This prevents the lowest scores from being displayed in too light of a color to easily view. Set the value in the range 1 - 9, lightest to darkest.",

	      "minimum": 1,

	      "maximum": 9
	    },

	    "noScoreFilter": {
	      "type": "boolean",

	      "description": "By default, bed tracks with 5 or more standard bed fields that contain either a '.' or a '+' in the type setting will be filterable on score; that is, they will have an assumed setting of "scoreFilter 0". To turn this old-style default off, include the "noScoreFilter" setting."
	    },

	    "spectrum": {
	      "type": "boolean",

	      "description": "If your track is a bed 5 or greater, then the standard bed score field exists. This score, which is expected to vary from 0-1000, can be used to control the shading of bed items drawn in the Browser image. To activate this feature, set spectrum on. Lower scores will be shaded in light gray by default, while higher scores will trend towards black. This can be modified in a number of ways: 1. color can be used to replace gray scale with a color scale; 2. altColor with color can vary items from color to altColor; 3. minGrayLevel can be used to set the level of the lightest shade; 4. scoreMin and scoreMax can be used to define the lower and upper limits of the range that will receive graded shading"
	    },
	    
	    "scoreMin": { "type": "integer" },
	    
	    "scoreMax": { "type": "integer" },

	    "thickDrawItem": {
	      "type": "boolean",

	      "description": "In bed tracks that have 8 or more standard bed fields, portions of items in tracks such as gene models can be drawn thicker to differentiate exon regions from introns. When data is displayed at different scales, the items and the thick portions of the items should scale proportionally. However, it may be more important to see the existence of the thick regions than it is to attempt to maintain the proportion. By setting thickDrawItem on, the thick display regions of items are always drawn at a minimum of 3 pixels, even when zoomed out greatly."
	    },

	    "searchIndex": {
	      "type": "string",

	      "description": "Specifies the list of field names on which a index has been made. When a user enters a string in the position search box of the browser, this index will be searched to find that name, and if the string is in the index, the user will either be navigated to that position in the browser, or if there are more than one matches of that string, will be give a list of the positions to choose from."
	    },

	    "searchTrix": {
	      "type": "string",
	      
	      "description": "Specifies the URL to a TRIX file that maps free text to a set of indices that are assumed to have indicies in the associated bigBed file.",

	      "format": "uri"
	    },

	    "bedNameLabel": {
	      "type": "string",

	      "description": "When a user clicks on a bed track item in the Browser image, the item detail page is shown. This setting specifies an alternate label for the item name on that page. Without this setting, the label will be 'Item:'."
	    },

	    "exonArrowsDense": {
	      "type": "boolean",
	      
	      "description": "On tracks that show exons or blocks within items, exon arrows allow the user to jump to the next exon/block outside the image. Use this setting to display exon arrows even when the track is in dense mode."
	    },

	    "itemImagePath": { "$ref": "#/definitions/image_path" },

	    "itemBigImagePath": { "$ref": "#/definitions/image_path" },

	    "nextExonText": {
	      "type": "string",

	      "definition": "For tracks that offer multiple block items such as gene models, the next/previous exon arrows are usually displayed by default in the Browser. The functionality of these tiny arrows is described by mouse-over "tool tips" that default to "Next Exon" and "Prev Exon". If the blocks do not represent exons, you can adjust the tool tip text to the appropriate information with these two settings."
	    },

	    "prevExonText": { "type": "string" },

	    "showTopScorers": { "type": "integer" }
	  },

	  "required": [ "type", "bigDataUrl" ]
	}
      ]    
    },

    "bigWig_track": {
      "allOf": [
        { "$ref": "#/definitions/track" },

	{ "properties": {
	    "type": { 
	      "type": "string", 

	      "enum": [ "bigWig" ] 
	    }, 

	    "range": { "$ref": "#/definitions/range" },

	    "alwaysZero": {
	      "type": "boolean",

	      "description": "When autoScale is set to "on" in the signal track, additionally setting alwaysZero to "on" will ensure that the y=0 value will be in view at all times. Default: off. "
	    },

	    "autoScale": {
	      "type": "boolean",

	      "description": "The graph of the data displayed in the Browser image is usually scaled on the y axis in absolute coordinates. However, you can display the data in autoScale which will ensure that the high score in the current viewing window will peak at the top of the graph. Like most graph settings, this is configurable by the user. Setting it to "on" in trackDb will default the track to autoScale. Default: off. NOTE: this option should be avoided if it will lead to display regions in which a low signal erroneously appears as significant because there is no high signal in the view window."
	    },

	    "bigDataUrl": { "$ref": "#/definitions/bigDataUrl" },

	    "graphTypeDefault": {
	      "type": "string",

	      "description": "The signal can be graphed as either 'points' displayed at the signal value, or the default space-filling 'bars'.",

	      "enum": [ "bars", "points" ]
	    },

	    "maxHeightPixels": {
	      "type": "object",

	      "description": "The amount of vertical viewing space for your signal track should be declared, though it is configurable by the user. Typically it is set to no more than 100 pixels and no less than 8, with a default of 16 or 32 pixels.",

	      "properties": {
	        "max": { "type": "number" },
		"default": { "type": "number" },
		"min": { "type": "number" }
	      },

	      "required": [ "max", "default", "min" ]
	    },

	    "maxWindowToQuery": {
	      "type": "integer",

	      "description": "When signal data is clicked in the Browser image, the details of the signal in the current viewing window are displayed. For bigWigs that reference remote data, the query can be a very expensive operation if the current window is large. To avoid overburdening the Browser, the size of the window to query should be limited. The value of this setting is the maximum window size in bases that should be queried to give the detailed signal numbers."
	    },

	    "negateValues": {
	      "type": "boolean",

	      "description": "Negate the values in the wiggle, meaning that positive values become negative and vice-versa. This is useful for wiggles representing transcription or other activities on the Crick strand. Be aware that wiggles with negative values are drawn in altColor not color as positive values are."
	    },

	    "smoothingWindow": {
	      "description": "Often signal information is chunky, because a single value is given for a number of bases. The graph can smooth the chunky data, presenting a display more reflective of the actual biology it is meant to illustrate. The numerical value of this setting determines how much surrounding data to use for smoothing: the larger the number, the less abrupt the curves will be. The setting is user-configurable. Default: off.",

	      "oneOf": [
	        { "type": "boolean" },
		{ 
		  "type": "integer",
		  "minimum": 1,
		  "maximum": 16
		}
	      ]
	    },

	    "transformFunc": {
	      "type": "string",
	      
	      "description": "The track's signal can be presented in log scale with this user-configurable setting. Default: NONE.",

	      "enum": [ "NONE", "LOG" ]
	    },

	    "viewLimits": { "$ref": "#/definitions/range" },

	    "viewLimitsMax": { "$ref": "#/definitions/range" },

	    "windowingFunction": {
	      "type": "string",

	      "description": "Depending upon how large of a genomic region is displayed in the Browser image, it may be necessary to summarize the actual signal. This user-configurable setting controls how the Browser collapses the signal from (for example) 100 or 100 thousand bases down to a single pixel. By default the single pixel represents the mean of the data, though the maximum or minimum can alternatively be displayed. A more informative option is often mean+whiskers. This setting displays the mean, max and one standard deviation above mean, differentiated by shading. The mean is displayed as the darkest shade, one stdDev above mean as slightly lighter, and the max as the lightest shade. This subtle shading can quickly indicate if the condensed data is hiding important information that can be adequately evaluated only by zooming in.",

	      "enum": [ "mean", "mean+whiskers", "maximum", "minimum" ],
	    },

	    "yLineOnOff": {
	      "type": "boolean",

	      "description": "It can be useful to draw a line across the track's signal graph at some fixed y coordinate. Do this by setting yLineOnOff to "on" and specifying the y coordinate with yLineMark. These two settings are configurable by the user. Defaults: off and 0.0."
	    },
	    
	    "gridDefault": { "type": "boolean" },

	    "yLineMark": { "type": "number" }	    
	  }

	  "required": [ "type", "bigDataUrl" ]
	}
      ]    
    },

    "bam_track": {
      "allOf": [
        { "$ref": "#/definitions/track" },

	{ "properties": {
	    "type": { 
	      "type": "string", 

	      "enum": [ "bam" ] 
	    }, 

	    "bigDataUrl": { "$ref": "#/definitions/bigDataUrl" },

	    "bamColorMode": {
	      "type": "string",

	      "description": "There are numerous ways to color bam tracks to highlight certain aspects of the data. All of these are user-configurable. Possible settings: 1. strand: (Default) When colored by strand, mismatched bases are highlighted in bright red, alignments on the reverse strand are colored dark red, and alignments on the forward strand are colored dark blue; 2. gray: When colored in grayscale, items are shaded according to the method specified by bamGrayMode: alignment quality, base qualities, or unpaired ends; 3. tag: Colors are specified in "user-defined tags". SAM/BAM may include user-defined tags, the names of which begin with X, Y or Z and include one other letter or number. The user-defined tag named here specifies red, green and blue (RGB) intensities as a zero-terminated string (tag type Z) containing comma-separated triples of numbers from 0-255. For example, if a SAM/BAM record includes the tag YC:Z:255,0,0, then the item is colored red; YC:Z:0,0,255 makes the item blue. By default, the tag is "YC" unless changed using the bamColorTag setting; 4. off: No additional coloring.",

	      "enum": [ "strand", "gray", "tag", "off" ]
	    },

	    "bamGrayMode": {
	      "type": "string",

	      "description": "When bamColorMode is set to "gray", you can highlight one of the following: 1. aliQual: (Default) The "alignment qualities" of the items are shaded on a scale of 0 (lightest) to 99 (darkest). Use aliQualRange to specify a default range; 2. baseQual: "Base qualities" are shaded on a scale of 0 (lightest) to 40 (darkest). Use baseQualRange to specify a default range; 3. unpaired: When "unpaired ends" is selected, an item that was paired in sequencing but whose mate was not mapped is colored gray, while singletons and properly paired items are colored black. Refer to the SAM format details for a discussion of these values.",

	      "enum": [ "aliQual", "baseQual", "unpaired" ]
	    },

	    "aliQualRange": { "$ref": "#/definitions/range" },

	    "baseQualRange": { "$ref": "#/definitions/range" },
	    		     
	    "bamColorTag": {
	      "type": "string",

	      "description": "You can also use RGB data associated with individual tags within the bam file itself. Refer to the SAM documentation to understand how the RGB values are included. When the bamColorMode is set to 'tag', the standard 'YC' tag is used as the default. The default may be overridden with this setting."
	    },

	    "noColorTag": { 
	      "type": "boolean",

	      "description": "The bam coloring options are all user-configurable within the browser. If your bam dataset contains no color tags, this setting should be included to block the Browser from offering the option to color tags by an embedded RGB value."
	    },

	    "bamSkipPrintQualScore": {
	      "type": "boolean",

	      "description": "Any bam tag can be displayed on the details page by clicking on it in the Browser image. The details include quality scores by default. If these scores are not relevant for this particular bam, they may be excluded from the details page with this setting."
	    },

	    "indelDoubleInsert": {
	      "type": "boolean",

	      "description": "Insertion and deletion differences between tag sequences and the reference genome can be highlighted with the use of these settings. These options may be set by the user. indelDoubleInsert: Use to highlight alignment gaps in both the target (reference) and query (tag) sequence with double (=) lines. indelQueryInsert: Use to highlight an insert in the query sequence only by drawing an orange (|) or purple (|) vertical line. Orange lines show unalignable regions in the middle of a sequence, and purple highlights regions at the end of the query sequence. indelPolyA: Use to highlight an apparently valid poly-a tail by drawing a vertical green line (|).",
	    },

	    "indelQueryInsert": { "type": "boolean" },

	    "indelPolyA": { "type": "boolean" },

	    "minAliQual": {
	      "type": "number",

	      "description": "When the Browser image is zoomed in to the level where individual tags are visible, the tags in a bam file can be filtered to show only those with a minimum alignment quality score. This is a user-configurable setting. Default: 0."
	    },

	    "pairEndsByName": {
	      "type": "boolean",

	      "description": "Some high-throughput sequencing technologies result in "paired end" tags, which are two individual bam records joined by their name. If this is the case with your dataset, include this setting."
	    },

	    "pairSearchRange": {
	      "type": "number",

	      "description": "Searching to join pairs of tags by name will be limited to a maximum distance (default: 20,000 bases). Use a larger range to increase the likelihood that both reads in a pair will be found even when only one read is in the viewed region. Use a smaller range to speed image rendering."
	    },

	    "showNames": {
	      "type": "boolean",

	      "description": "When the Browser image is zoomed in to the level where individual tags are viewable, the query name for each tag is shown by default. Use this setting to hide this name."
	    }
	    
	  },

	  "required": [ "type", "bigDataUrl" ]
	}
      ]      
    },

    "vcfTabix_track": {
      "allOf": [
        { "$ref": "#/definitions/track" },

	{ "properties": {
	    "type": {
	      "type": "string",

	      "enum": [ "vcfTabix" ]
	    },

	    "bigDataUrl": { "$ref": "#/definitions/bigDataUrl" }

	  },
	  "required": [ "type", "bigDataUrl" ]
	}
      ]      
    },

    "composite_track": {},

    "super_track": {},

    "aggregate_track": {},

    "track": {
      "type": "object",

      "description": "Contains display and configuration properties common to all track types.",

      "properties": {
        "name": { "$ref": "#/definitions/name" },

	"shortLabel": { "$ref": "#/definitions/shortLabel" },

	"longLabel": { "$ref": "#/definitions/longLabel" },

	"visibility": { "$ref": "#/definitions/visibility" },

	"boxedCfg": { 
	  "type": "boolean",

	  "description": "Configuration controls can be placed inside a box on the configuration page. This setting is decorative only, but can make a busy page look more cohesive. Not all track types currently support this feature, but the most common types do, including wig, bigWig, bed, and bigBed. DEFAULT: off."
	},

	"color": { 
	  "$ref": "#/definitions/color",

	  "description": "Many track types allow the color of the data displayed in the image to be specified with this setting. The setting accepts red, green and blue values, each in the range of 0-255 and delimited by commas. Though this setting is widely supported, some track types in certain display modes ignore it, such as the EST tracks in dense mode."
	},
	
	"altColor": { 
	  "$ref": "#/definitions/color",

	  "description": "Many track types allow setting a color range that varies from color to altColor. For instance the CpG Island tracks use the altColor setting to display the weaker islands, while the stronger ones are rendered in color. If altColor is not specified, the system will use a color halfway between that specified in the color tag and white instead."
	},

	"chromosomes": {
	  "type": "array",

	  "description": "Some datasets do not contain data for all chromosomes of a genome. When this is true, use this setting to specify the chromosomes that are covered. The system displays a message that no data is available when the user browses chromosomes not included in this list.",

	  "items": { "type": "string" },

	  "minItems": 1,
	  
	  "uniqueItems": true
	},

	"dataVersion": {
	  "type": "string",

	  "description": "Many tracks undergo multiple revisions over time. In some cases, the older versions should be retained, but even if they are not, it can be useful to declare the current version of the track. Use this setting to display a version statement on the track configuration page and item details page of a track."
	},

	"directUrl": {
	  "type": "string",

	  "description": "Link to a details page giving information about that item.",

	  "format": "uri"
	},

	"iframeUrl": { 
	  "type": "string",

	  "description": "This setting allows integrating an external html page into the default details page, as an iframe."
	},

	"iframeOptions": {
	  "type": "string",

	  "description": "When iframeUrl is used, this statement specifies a string that is inserted literally into the HTML <iframe> tag. It can include options needed for iframe formatting, like width, height, scrolling, etc. If the statement is not present, the default is width='100%' height='1024'."
	},

	"otherDb": {
	  "type": "string",

	  "description": "Track types that show pairwise alignments often need to declare the other species/assembly included in the alignment."
	},

	"pennantIcon": {
	  "type": "object",

	  "description": "Certain tracks can be visually flagged in the Browser by use of an icon and a link to a description of the icon's meaning. The icon is displayed next to the track's short label in the track groups section below the Browser image, and on the track's description and configuration pages. This setting has three parts: 1. icon: currently must refer to an icon in the Browser's images directory in the Browser source tree; 2. a relative or full html path to a description document explaining the icon's meaning. This page displays when the user clicks on the icon; 3. tip: a quoted string tip that will be seen when the user's mouse pointer hovers over the icon.",

	  "properties": {
	    "icon": { "type": "string", "format": "uri" },
	    "html": { "type": "string", "format": "uri" },
	    "tip": { "type": "string" }
	  }
	},

	"priority": {
	  "type": "number",

	  "description": "The priority is used to define the order of a track within its track group or data hub, as well as its default order within the Browser image. The order within the image can be dynamically changed by the user and will always depend upon which other tracks are currently visible. Typically the priority is set only for tracks that are on by default in order to move them ahead of other tracks. Prioritized tracks within a group or data hub are displayed in ascending priority order, followed by unprioritized tracks sorted alphabetically by short label. Tracks of the same priority within a group or hub are sorted by short label. Priority is a floating point number. Default: 0."
	},

	"url": {
	  "type": "string",

	  "description": "Many tracks allow an external link when an individual track data item is examined. Use this setting to put a link to an external URL on the details page. The default prompt the user will see for this url is "outside link:". Use urlLabel to provide a more informative prompt.",

	  "format": "uri"
	},

	"urlLabel": { "type": "string" },

	"urls": {
	  "$ref": "#/definitions/fields_urls",

	  "description": "This is similar to the url tag, but allows urls on fields that are not the "name" field. Use this statement if you need multiple linkouts on the details page or if your linkout is not based on the name field."
	}
      },

      "required": [ "name", "shortLabel", "longLabel", "visibility" ]
    },

    "name": {
      "type": "string",
      
      "definition": "The symbolic name of the track. This is the name of the dataset and must be unique within the Genome Browser or dataHub.",

      "pattern": "^[a-zA-z][a-zA-Z0-9_]+$"
    },

    "type": {
      "type": "string",

      "enum": [ "bam", "bigBed", "bigWig", "vcfTabix"],

      "description": "Declares the format of the data and is used to determine display methods and options. In many cases the type setting includes additional parameters to further specify the data format."
    },

    "shortLabel": {
      "type": "string",

      "definition": "Specifies the track's "short label", which is used in a number of places in the Browser to identify the track.",

      "maxLength": 17
    },

    "longLabel": {
      "type": "string",

      "definition": "Specifies the track's "long label", which is also used in numerous places in the Browser to identify a track. This label should be descriptive enough to allow users to uniquely identify the track within the Browser.",

      "maxLength": 76
    },

    "bigDataUrl": {
      "type": "string",

      "description": "The location of a remote data file containing the bulk of the data for the track. The setting is either the full URL (including http: or another protocol) or it is relative to the directory in which the trackDb file containing this setting is located. The file must be in one of the supported remote data file formats: bam, bigBed, bigWig or vcfTabix. Note that bam and vcfTabix types require a separate index file that must have the same name as the data file plus a standard suffix (".bai" and ".tbi" respectively).",

      "format": "uri"
    },   

    "visibility": {
      "enum": [ "hide", "dense", "squish", "pack", "full" ],

      "description": "Visibility (i.e. "display mode") specifies which of 5 modes (including 'hide') should be used to display the track within the Browser image. This setting is almost always dynamically customizable by each user. The exact configuration of the display for each mode depends upon the track's type, and some modes may not be supported for certain track types. Valid settigs: 1. hide: DEFAULT. The track is not displayed in the Browser image unless the user changes the display setting; 2. dense: The track is displayed as a single line or ribbon. In many cases multiple items are summarized or drawn on top of one another, and the long labels are not displayed; 3. squish: Each item is drawn individually, but at half height and without a label. (Not supported for all types.); 4. pack: Items are displayed individually at full height, but in a much more compact vertical space than in full mode. (Not supported for all types.); 5. full: Each item is displayed as a separate line in the Browser image. Graphed signals may be displayed in varying heights."
    },

    "color_code": {
      "type": "integer",

      "minimum": 0,
      "exclusiveMinimum": false,

      "maximum": 255,
      "exclusiveMaximum": false
    },

    "color": {
      "type": "object",

      "description": "Specifies a color as red, green, blue values",

      "properties": {
        "red": { "$ref": "#/definitions/color_code" },
	"green": { "$ref": "#/definitions/color_code" },
	"blue": { "$ref": "#/definitions/color_code" },
      }
    },

    "fields_urls": {
      "type": "array",

      "items": {
        "type": "object",

	"properties": {
	  "field": { "type": "string" },
	  "url": { "type": "string", "format": "uri" }
	}
      },

      "minItems": 1,
      "uniqueItems": true
    },

    "range": {
      "type": "array",

      "description": "Define a range of value: first value is lower bound, second is upper."

      "items": [
        { "type": "number" },
	{ "type": "number" }
      ]
    },

    "scoreFilter": {
      "type": "object",

      "description": "The standard bed field of score, which is an integer will be used to filter items in the track. By default, items with scores below threshold will be excluded. If limits is specified, the threshold cannot be set outside the boundaries specified by limits.",

      "properties": {
        "threshold": { "type": "number" },

	"limits": { "$ref": "#/definitions/range" }
      }

      "required": ["threshold"]
    },

    "image_path": {
      "type": "object",

      "definition": "Items can be associated with images and the images can be made visible with these two settings. The itemImagepath specifies a URL path to a directory with image files named in the format {name}.{suffix}. The name is retrieved from the table or remote data file. This image will be displayed on the item detaiIs page. If itemBigImagePath is also supplied, then a link to a larger image will be provided. If the path provided is local to the browser then the path should be relative.",

      "properties": {
        "path": { "type": "string" },

	"suffix": { "type": "string" }
      }
    }

  }

}