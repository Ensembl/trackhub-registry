Overview
========

- Periodic checks and updates
  - Registry::TrackHub::TrackDB
  - Registry::Controller::[API,User]
  - Production script to run as a cron job

- Trackhub provider notification
  - user object to store more options
  - Catalyst::Authentication::Store::ElasticSearch::User

- Update trackdb doc upon change on remote hub
  - use checksum

- hub type, e.g. genomics, proteomics etc. (parameter of endpoint?)

- trackdb:
  - source checksum
    source: { url: '', checksum: '' }
  - timeout when updating status (parameter?)

X trackdb/hub URL if public, display

X track file type, e.g. bigbed, bigwig etc. (determine with TrackDB scan)
  - handle vcf and bed cases, which (could) end with .gz

- limit size of error log

- if th provider updates status on a trackdb and this is very big, the
  whole site halts. 
  prevent this operation? have to test with multiple spawned workers
  at least, warn the user and/or prevent action if number of tracks is 
  above a certain range

Web Frontend
============

X Registration
  - Add more options controlling periodic checks and notifications

- TrackHub provider pages
  X Profile panel
    - show and manage additional registration options
  X Hub list panel
    - created/updated field 
    - status with last update 
    - view for problematic hubs
  - Submission panel

- Admin pages
  - more actions/different template according to new settings

- Search results
  X Show status
  X View info
  X Remove hub/type tabbed panels
  - Facets to provide link to show more elements
  X Number of search results per page
  - Correct pagination, use simple approach like DCC?!

- Non authenticated pages
  X use context user whenever linking to auth pages
  - link to the original trackhub specification
  - browse link?
  - about/help/documentation pages

Registry::Controller::API
=========================

X add created/update field upon submission/update
X add status field upon submission/update
X UCSC track hub submission does not get assembly param,
  translate everything it finds on the remote hub
X prevent submission of duplicate content (trackdb with same hub/species?/assembly)

Registry::Controller::User
==========================

X 'list hub' action and template to use TrackDB
X 'update status' action to use TrackDB

JSON spec 1.0
=============

X created/updated fields, not indexed:
  added to mapping, not schema, since they will be created automatically,
  user's not aware of it
X status object, disabled
? store original trackDb file as attribute 
  should not be necessary if the configurations are represented as as tree, 
  should be easy to translate back. 
X store the source URL

Registry::TrackHub::Translator
==============================

  X finish mapping of UCSC synonyms to assembly accession IDs
  X translate the hierarchy as well
  - test with various public track hubs and assemblies
  |
  ----> ERROR: the existing parser cannot parse metadata as key=value
               pairs containing quotes with spaces
  - use GenomeAssemblyDB model instead of schema class directly

X Validation class, use python validator script

- REST
  X rewrite trackhub examples using schema version 1.0
  X update controller test with v1.0 examples
  X UCSC trackdb translation/creation endpoint (POST)
    |
    --> POST /api/trackhub/translate { url => '', assembly => '' }
    X validation according to given schema version
    X complete tests with more public hubs
  X Trackhub JSON creation endpoint (PUT)
    X validation according to given schema version
    X test again
  X /api/trackhub/:id (POST)
    X validation according to given schema version (which one? the one of the original stored doc)
    X  test again
  - API to get/search trackhubs with no authentication (e.g. for genome browsers)

- Replace trackhub parsing et al. code with ensembl-io routines

X Data::SearchEngine::ElasticSearch
  - search method options to comply with ES API, e.g. aggregations

- Move synonyms to assembly ID mapping to a configuration file 
  - use JSON? load into ElasticSearch? (Pb. comments are lost)
  - update translator accordingly

- Look at what has changed in the webteam URL et al. modules

- Website
 - search by provider (hub attribute should do that, test)
 - provide pages (with links from the front page and menu) to
   list content providers and trackhubs which can be listed
   using various dimensions, e.g. species (like the DAS registry)
 X search to provide minimum faceting according to some dimensions,
   e.g. species, and a subset of those specified in the
   http://dcc.blueprint-epigenome.eu/#/experiments page

- Prototype
 - Openstack VM
 - install oracle development tools 11.1.0.6.0
 - install validation script, must be in the PATH