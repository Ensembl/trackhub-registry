- JSON spec 1.0
  X data/configuration
  X configuration is a tree of hierarchically organised track configurations
  X track configuration is an associative array of key/value (string) pairs 

- Registry::TrackHub::Translator
  X finish mapping of UCSC synonyms to assembly accession IDs
  X translate the hierarchy as well
  - test with various public track hubs and assemblies
  |
  ----> ERROR: the existing parser cannot parse metadata as key=value
               pairs containing quotes with spaces
  - use GenomeAssemblyDB model instead of schema class directly
  ? store original trackDb file as attribute 
    should not be necessary if the configurations are represented as as tree, 
    should be easy to translate back. maybe store the source URL instead?

X Validation class, use python validator script

- REST
  X rewrite trackhub examples using schema version 1.0
  X update controller test with v1.0 examples
  X UCSC trackdb translation/creation endpoint (POST)
    |
    --> POST /api/trackhub/translate { url => '', assembly => '' }
    X validation according to given schema version
    X complete tests with more public hubs
  X Trackhub JSON creation endpoint (PUT)
    X validation according to given schema version
    X test again
  X /api/trackhub/:id (POST)
    X validation according to given schema version (which one? the one of the original stored doc)
    X  test again
  - API to get/search trackhubs with no authentication (e.g. for genome browsers)

- Replace trackhub parsing et al. code with ensembl-io routines

- Data::SearchEngine::ElasticSearch
  - search method options to comply with ES API

- Reimplement Catalyst::Model::ElasticSearch/Registry::Model::Search
  in terms of Data::SearchEngine::ElasticSearch?
  This is lower priority

- Move synonyms to assembly ID mapping to a configuration file 
  - use JSON? load into ElasticSearch? (Pb. comments are lost)
  - update translator accordingly

- Look at what has changed in the webteam URL et al. modules

- Website
 X single query search highlighted on the front page
 - search by provider (hub attribute should do that, test)
 - provide pages (with links from the front page and menu) to
   list content providers and trackhubs which can be listed
   using various dimensions, e.g. species (like the DAS registry)
 - search to provide minimum faceting according to some dimensions,
   e.g. species, and a subset of those specified in the
   http://dcc.blueprint-epigenome.eu/#/experiments page
 X remove any reference to the DAS registry
 - insert link to the original trackhub specification
 - search result page, properly styled search result entry
   with tabbed links to view the hub and load it into Ensembl
   (see physical notes)
 - new dev GWAS catalog provides a good example of a search interface
   http://wwwdev.ebi.ac.uk/gwas

- Prototype
 - install oracle development tools 11.1.0.6.0
 - install validation script, must be in the PATH