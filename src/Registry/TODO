- JSON spec 1.0
  - data/configuration
  - configuration is a tree of hierarchically organised track configurations
  - each configuration is an associative array of key/value (string) pairs

- Registry::TrackHub::Translator
  - finish mapping of UCSC synonyms to assembly accession IDs
  - translate the hierarchy as well
  - test with various public track hubs and assemblies
  - validation according to given schema version
  - store original trackDb file as attribute?
    should not be necessary if the configurations are represented as as tree, 
    should be easy to translate back 
    maybe store the source URL instead?

- Data::SearchEngine::ElasticSearch
  - search method options to comply with ES API

- Validation class
  use python validator underneath

- Move synonyms to assembly ID mapping to a configuration file 
  - use JSON? load into ElasticSearch? (Pb. comments are lost)
  - update translator accordingly

- Look at what has changed in the webteam URL et al. modules

- REST API
  - UCSC track hub style submission endpoint

- Website
 - single query search highlighted on the front page
 - search by provider (hub attribute should do that, test)
 - provide pages (with links from the front page and menu) to
   list content providers and trackhubs which can be listed
   using various dimensions, e.g. species (like the DAS registry)
 - search to provide minimum faceting according to some dimensions,
   e.g. species, and a subset of those specified in the DCC
   blueprint-epigenome/#experiments page
 - remove any reference to the DAS registry
 - insert link to the original trackhub specification
 - search result page, properly styled search result entry
   with tabbed links to view the hub and load it into Ensembl
   (see physical notes)
   