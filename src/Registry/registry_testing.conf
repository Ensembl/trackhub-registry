name   TestTrackhubRegistry
default_view = HTML
encoding utf8

service_name = TrackHub Registry
read_only_mode = 0

<TrackHub>
    <schema>
        default  v1.0
        v1.0 __path_to(root/static/trackhub/json_schema_1_0.json)__
        validate __path_to(root/static/trackhub/)__
    </schema>
</TrackHub>

<Model::Search>
    <schema>
        <trackhub>
            mapping_file    __path_to(docs/trackhub-schema/v1.0/trackhub_mappings.json)
            index_name      trackhubs
            type            trackdb
        </trackhub>
        <report>
            mapping_file    __path_to(docs/trackhub-schema/v1.0/reports_mappings.json)
            index_name      reports
            type            report
        </report>
    </schema>
    
    # Options for ES client
    max_requests        10000
    nodes               localhost:9200
    request_timeout     30
</Model::Search>

<Model::Stats>
    summary = __path_to(root/static/data/summary_test.json)__
</Model::Stats>

<Model::Users>
    <connect_info>
        #dsn         = dbi:mysql:dbname=thr_users
        dsn          = dbi:SQLite:dbname=./thr_users.db
        #user        = admin
        #password    = 
    </connect_info>
    #mysql_enable_utf8       = 1
    #mysql_auto_reconnect    = 1
    #Â salt must match Plugin::Authentication setting
    salt = afs]dt42!
</Model::Users>

<GenomeCollection>
    assembly_set_file = __path_to(root/static/gc_assembly_set.json.gz)__
</GenomeCollection>

<Model::GenomeAssemblyDB>
    schema_class  Registry::GenomeAssembly::Schema
    traits Caching
    <connect_info>
        dsn    DBI:Oracle:host=ora-vm-066.ebi.ac.uk;sid=ETAPRO;port=1571
        # This uses an ENA database to decipher user-provided assemblies
        user   gc_reader
        password   reader
    </connect_info>
</Model::GenomeAssemblyDB>

<Plugin::Authentication>
    use_session     1
    default_realm   http
    <realms>
        <http>
            <credential>
                class                       Password
                password_type               hashed
                password_hash_type          SHA-256
                password_pre_salt           afs]dt42!
            </credential>
            <store>
                class                       DBIx::Class
                # user_model leans on Catalyst::Model::DBIC::Schema to automatically provide model aliases to schema classes
                user_model                  Users::User
                role_relation               roles
                role_field                  name
                use_userdata_from_session   1
            </store>
        </http>
        <authkey>
            <credential>
                class                       Password
                # password_field is the only substantial change in the two realms 
                password_field              auth_key
                password_type               hashed
                password_hash_type          SHA-256
                password_pre_salt           afs]dt42!
            </credential>
            <store>
                class                       DBIx::Class
                user_model                  Users::User
                role_relation               roles
                role_field                  name
                use_userdata_from_session   1
            </store>
        </authkey>
    </realm>
</Plugin::Authentication>
