<!--<div class="page-header">-->
<div class="row">
  <div class="col-sm-12">
    <ul class="breadcrumb">
      <li><a href="/">Home</a></li>
      <li><a>Docs</a></li>
      <li><a>API</a></li>
      <li>Registration</li>
    </ul>
  </div>
</div>

<div class="row">
  <div class="col-sm-3" style="margin-top: 25px;">
    <div id="search-sidebar-left">
        <div class="panel panel-primary">
	  <div class="panel-heading">API Docs</div>
          <div class="panel-body">
	    <ul class="nav nav-list">
	      <li><a href="[% c.uri_for('/docs/apis') %]">TH Registry APIs</a></li>
	      <li><a href="[% c.uri_for('/docs/api/info') %]">Info API</a></li>
	      <li><a style="font-weight: bold;">Registration API</a>
	        <ul>
		  <li><a href="[% c.uri_for('/docs/api/registration#authentication') %]">Authentication</a></li>
		  <li><a href="[% c.uri_for('/docs/api/registration#workflow') %]">A simplified RESTful workflow</a></li>
		  <li>
		    <a href="#">API Reference</a>
		    <ul>
		      <li><a href="#login">GET /api/login</a></li>
		      <li><a href="#get_trackhub">GET /api/trackhub</a></li>
		      <li><a href="#post_trackhub">POST /api/trackhub</a></li>
		      <li><a href="#get_trackdb">GET /api/trackdb/:id</a></li>
		      <li><a href="#post_trackdb_create">POST /api/trackdb/create</a></li>
		      <li><a href="#put_trackdb">PUT /api/trackdb/:id</a></li>
		      <li><a href="#delete_trackdb">DELETE /api/trackdb/:id</a></li>
		      <li><a href="#logout">GET /api/logout</a></li>
		    </ul>
		  </li>
		</ul>
	      </li>
	      <li><a href="[% c.uri_for('/docs/api/search') %]">Search API</a></li>
	    </ul>
          </div> 
	</div>
    </div> <!-- sidebar -->
  </div>

  <div class="col-sm-9" style="text-align: justify; text-justify: inter-word;">

  <h2>Registration API</h2>
  In all the following examples, it is assumed the client has successfully logged in as user <mark>exampleuser</mark> and password <mark>examplepassword</mark> and therefore obtained a valid access token. This token is used in all the following endpoint examples except /api/login.

  <h3 id="login">GET /api/login</h3>
  <p>
    Authenticate the client and obtain an access token in order to make subsequent requests to the Registration API.
  </p>
  <p>
    If the request is successful, the response is formatted as a JSON object with a single key (<mark>auth_token</mark>), whose value is the access token. <u>This token must be included as an <mark>Auth-Token</mark> header in all subsequent requests</u>.
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>Basic, MIME Base64</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <p>None.</p>

  <h4>Example Request</h4>
  <pre>
    GET https://www.trackhubregistry.org/api/login
    Authorization: Basic ZXhhbXBsZXVzZXI6ZXhhbXBsZXBhc3N3b3Jk
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    Content-type: application/json; charset=utf-8
    ...
    {
      "auth_token":"6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi"
    }
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
    </tbody>
  </table>

  <h3 id="get_trackhub">GET /api/trackhub</h3>
  <p>
    Returns the set of registered track data hubs for the given user.
  </p>
  <p>
    If the request is successful, the response body is an array of JSON objects representing trackhubs registered by the user. A trackhub object has the following attributes:
    <ul>
      <li><mark>name</mark>: the single-word trackhub name;</li>
      <li><mark>url</mark>: the track hub remote URL;</li>
      <li><mark>shortLabel</mark>: the short name for the track hub;</li>
      <li><mark>longLabel</mark>: the longer descriptive label for the track hub;</li>
      <li><mark>trackdbs</mark>: a list of objects for each trackDb (i.e. assembly specific data files) associated to the track hub. Each trackDb object contains the species NCBI tax id and assembly accession, and the URI of the JSON representation of the trackDb which can be retrieved from the Registry.
      </li>
    </ul>
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <p>None.</p>

  <h4>Example Request</h4>
  <pre>
    GET https://www.trackhubregistry.org/api/trackhub
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    ...
    [
      {
        'trackdbs' => [
                            {
                              'species' => '3988',
                              'assembly' => 'GCA_000151685.2',
                              'uri' => 'https://www.trackhubregistry.org/api/trackdb/knB1GHPYSdmeypb-R8sxhA'
                            },
                            {
                              'species' => '3711',
                              'assembly' => 'GCA_000309985.1',
                              'uri' => 'https://www.trackhubregistry.org/api/trackdb/JFF3OqH1QJmIJSlLfICyQg'
                            },
                            {
                              'species' => '3702',
                              'assembly' => 'GCA_000001735.1',
                              'uri' => 'https://www.trackhubregistry.org/api/trackdb/We3M8-1RQnaUYpTspYQpCQ'
                            }
                          ],
        'shortLabel' => 'Plants',
        'name' => 'cshl2013',
        'url' => 'http://genome-test.cse.ucsc.edu/~hiram/hubs/Plants/hub.txt',
        'longLabel' => 'CSHL Biology of Genomes meeting 2013 demonstration assembly hub'
      },
      {
        'trackdbs' => [
                            {
                              'species' => '9606',
                              'assembly' => 'GCA_000001405.15',
                              'uri' => 'https://www.trackhubregistry.org/api/trackdb/rkaQgGf_TxW5xKElGkYQAA'
                            },
                            {
                              'species' => '9606',
                              'assembly' => 'GCA_000001405.1',
                              'uri' => 'https://www.trackhubregistry.org/api/trackdb/-IT64jDKRXiQN_Blhjy4Uw'
                            }
                          ],
        'shortLabel' => 'Ensembl Regulatory Build',
        'name' => 'EnsemblRegulatoryBuild',
        'url' => 'http://ngs.sanger.ac.uk/production/ensembl/regulation/hub.txt',
        'longLabel' => 'Evidence summaries and provisional results for the new Ensembl Regulatory Build'
      },
    ]
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="post_trackhub">POST /api/trackhub</h3>
  <p>
    Register/Update a remote public TrackHub with the Registry. The message body specifies the track hub remote URL (can be either the directory or hub.txt file URL) and, optionally, the hub assemblies data type (default: <mark>genomics</mark>), see <a href="#post_trackhub_msg_format">Message Format</a> for a list of possible types.
  </p>
  <p>
    If the trackhub at the specified URL has not been previously submitted, the Registry will register it by translating its trackDb files into JSON documents adhering to a particular <a href="[% c.uri_for('/docs/management/modelling') %]">JSON schema version</a>. If the trackhub has already been submitted, the request is interpreted as a request to update the details of the registered trackhub (e.g. the remote trackhub has been updated and you want to keep its details in the Registry up to date). In this case, the Registry will delete the relevant trackDb documents and replace them with translations of their most up-to-date versions.
  </p>
  <p>
    If the request is successful, the response body is formatted as an array of JSON objects, where each object is a translation of a trackDb document belonging to the trackhub. The response contains the header Location which specifies the URIs of the trackDb documents in their same respective order in the response body. 
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <p>
    <ul>
      <li><mark>version</mark> (optional): JSON schema version of the registered trackDb documents for this hub (default: v1.0, see <a href="[% c.uri_for('/docs/management/modelling') %]">Modelling TrackHubs</a> for a discussion)</li>
    </ul>
  </p>

  <h4>Message</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Content-type</th>
	<td>application/json</td>
      </tr>
      <tr>
        <th id="post_trackhub_msg_format">Format</th>
	<td>
	  <pre>
	    {
	      "type": "object",

	      "properties": {
	        "url":    { "type": "string", "format": "uri" },
		"type":  { "type": "string", "enum": [ "genomics", "epigenomics", "transcriptomics", "proteomics" ] },
		"assemblies": {
		  "type": "object",
		  "patternProperties": {
		    "[a-zA-z][a-zA-Z0-9]+$": { "type": "string", "pattern": "^G(CA|CF)_[0-9]+.[0-9]+$" }
		  }
		}
	      }

	      "required": [ "url" ]
	    }
	  </pre>
	</td>
      </tr>
      <tr>
        <th>Example</th>
	<td>{ "url" : "http://genome-test.cse.ucsc.edu/~hiram/hubs/Plants/hub.txt", "type": "epigenomics" }</td>
      </tr>
    </tbody>
  </table>


  <h4>Example Request</h4>
  <p>
    In this example, we are requesting to register/update the CSHL Biology of Genomes meeting 2013 demonstration hub, which contains data for three assemblies. The response body is an array of the three corresponding trackDb representations, with the header Location reporting their respective URIs in the same order.
  </p>

  <pre>
    POST https://www.trackhubregistry.org/api/trackhub
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
    {
      "url": "http://genome-test.cse.ucsc.edu/~hiram/hubs/Plants/hub.txt",
      "type": "epigenomics"
    }
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 201 OK
    Content-type: application/json
    Location: [ 'https://www.trackhubregistry.org/api/trackdb/KRBr5PS7RmapaFr7ofpTBA, 'https://www.trackhubregistry.org/api/trackdb/hB8Npdm1ST2gBwkbQThkVg', 'https://www.trackhubregistry.org/api/trackdb/FOEM87nETMOCOglmm0sSsg' ]
    ...
    [
      {
        // trackDb #1 JSON object
      },
      {
        // trackDb #2 JSON object
      },
      {
        // trackDb #3 JSON object
      }
    ]
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>201</td><td>Created</td><td>Request successful, hub trackDb entities created</td></tr>
      <tr>
        <td>400</td><td>Bad Request</td>
	<td>
	  Request cannot be fulfilled by the Registry. Possible reasons:
	  <ul>
	    <li>empty request body</li>
	    <li>invalid JSON schema version</li>
	    <li>request body does not specify remote hub URL</li>
	    <li>hub is not compliant with the UCSC hub specs</li>
	    <li>hub is not available or cannot be correctly parsed</li>
	    <li>one of the hub trackDb configurations cannot be translated to <a href="[% c.uri_for('/docs/api/modelling') %]">valid JSON</a></li>
	    <li>one of the hub genome subdirectory names are not <a target="_blank" href="https://genome.ucsc.edu/FAQ/FAQreleases.html#release1">valid UCSC DB names</a>, or cannot be translated to an existing NCBI assembly identifier (e.g. assembly accession + version, e.g. <a target="_blank" href="http://www.ncbi.nlm.nih.gov/assembly/GCF_000001405.13/">GCA_000001405.1</a>)
	  </ul>
	  See <a href="[% c.uri_for('/docs/api/registration/workflow/thregister#errors') %]">What can possibly go wrong</a> for more details, in particular about the error messages.
	</td>
      </tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="get_trackdb">GET /api/trackdb/:id</h3>
  <p>
    Return JSON representation of a trackDb with the given ID in the Registry.
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <table class="table table-striped">
    <thead><tr><th>Name</th><th>Type</th><th>Description</th><th>Example Values</th></tr></thead>
    <tbody>
      <tr>
        <td>id</td>
	<td><var>String</var></td>
    	<td>A trackDb document ID</td>
	<td><var>gOGRzcTSRd2l0LMQTufS4w</var></td>
      </tr>	
    </tbody>
  </table>

  <h4>Example Request</h4>
  <pre>
    GET https://www.trackhubregistry.org/api/trackdb/knB1GHPYSdmeypb-R8sxhA
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    Content-type: application/json
    ...
    {
          'owner' => 'exampleuser',
          'created' => 1440778576,
          'version' => 'v1.0',
          'type' => 'genomics',
          'source' => {
                        'checksum' => 'f9561ae6f7883add3698fad7abab7e13',
                        'url' => 'http://genome-test.cse.ucsc.edu/~hiram/hubs/Plants/ricCom1/trackDb.txt'
                      },
          'hub' => {
                     'shortLabel' => 'Plants',
                     'name' => 'cshl2013',
                     'url' => 'http://genome-test.cse.ucsc.edu/~hiram/hubs/Plants/hub.txt',
                     'longLabel' => 'CSHL Biology of Genomes meeting 2013 demonstration assembly hub'
                   },
          'species' => {
                         'scientific_name' => 'Ricinus communis',
                         'common_name' => 'castor bean',
                         'tax_id' => '3988'
                       },
          'assembly' => {
                          'synonyms' => 'ricCom1',
                          'name' => 'JCVI_RCG_1.1',
                          'accession' => 'GCA_000151685.2'
                        },

          'configuration' => {
                               'repeatMasker_' => {
                                                    'priority' => '149.1',
                                                    'visibility' => 'dense',
                                                    'compositeTrack' => 'on',
	  ...
    }
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr><td>400</td><td>Bad Request</td><td>trackDb entity does not belong to (i.e. has not been registered by) the user</td></tr
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>404</td><td>Not Found</td><td>Couldn't find the trackDb entity with the given ID</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="post_trackdb_create">POST /api/trackdb/create</h3>
  <p>
    Register a new trackDb with the Registry. The message body specifies the document representing the trackDb in the Registry as a JSON object.
  </p>
  <p>
    If the request is successful, the response contains the header Location which specifies the URI of the trackDb document, while the body contains the registered trackDb JSON document.
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <p>
    <ul>
      <li><mark>version</mark> (optional): JSON schema version of the trackDb documents (default: v1.0, see <a href="[% c.uri_for('/api/modelling') %]">Modelling TrackHubs</a> for a discussion)</li>
    </ul>
  </p>

  <h4>Message</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Content-type</th>
	<td>application/json</td>
      </tr>
      <tr>
        <th id="post_trackdb_msg_format">Format</th>
	<td>
	  See <a href="[% c.uri_for('/api/modelling') %]">trackDb JSON schema</a>.
	</td>
      </tr>
    </tbody>
  </table>


  <h4>Example Request</h4>
  <p>
    In this example, we are requesting to register a very basic trackDb which belongs to hub 'Test Hub' and contains epigenomics data in one track for the human GRCh38 assembly.
  </p>

  <pre>
    POST https://www.trackhubregistry.org/api/trackdb/create
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
    {
      type    => 'epigenomics',
      hub     => { name => 'Test', shortLabel => 'Test Hub', longLabel => 'Test Hub' },
      version => 'v1.0',
      species => { tax_id => 9606, scientific_name => 'Homo sapiens' },
      assembly => { accession => 'GCA_000001405.15' },
      data => [ { id => 'test', molecule => 'genomic_DNA' } ],
      configuration => { test => { shortLabel => 'test' } } 
    }
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 201 OK
    Content-type: application/json
    Location: https://www.trackhubregistry.org/api/trackdb/KRBr5PS7RmapaFr7ofpTBA
    {
      ...
    }
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>201</td><td>Created</td><td>Request successful, hub trackDb entities created</td></tr>
      <tr>
        <td>400</td><td>Bad Request</td>
	<td>
	  Request cannot be fulfilled by the Registry. Possible reasons:
	  <ul>
	    <li>empty request body</li>
	    <li>invalid JSON schema version</li>
	    <li>trackDb with the same hub and assembly exists</li>
	    <li>trackDb configuration cannot be translated to <a href="[% c.uri_for('/docs/api/modelling') %]">valid JSON</a></li>
	  </ul>
	</td>
      </tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="put_trackdb">PUT /api/trackdb/:id</h3>
  <p>
    Update registered trackDb with the given ID.
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <table class="table table-striped">
    <thead><tr><th>Name</th><th>Type</th><th>Description</th><th>Example Values</th></tr></thead>
    <tbody>
      <tr>
        <td>id</td>
	<td><var>String</var></td>
    	<td>A trackDb document ID</td>
	<td><var>gOGRzcTSRd2l0LMQTufS4w</var></td>
      </tr>	
    </tbody>
  </table>

  <h4>Message</h4>
  <p>
    A JSON object representing the trackDb in the corresponding schema, see <a href="[% c.uri_for('/api/modelling') %]">Modelling TrackHubs</a> for a discussion.
  </p>

  <h4>Example Request</h4>
  <pre>
    PUT https://www.trackhubregistry.org/api/trackdb/knB1GHPYSdmeypb-R8sxhA
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
    {
      type    => 'epigenomics',
      hub     => { name => 'Test', shortLabel => 'Test Hub', longLabel => 'Test Hub' },
      version => 'v1.0',
      species => { tax_id => 9606, scientific_name => 'Homo sapiens' },
      assembly => { accession => 'GCA_000001405.15' },
      data => [ { id => 'test', molecule => 'genomic_DNA' } ],
      configuration => { test => { shortLabel => 'test' } } 
    }
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    Content-type: application/json
    ...
    {
          'owner' => 'exampleuser',
          'created' => 1440778576,
          'version' => 'v1.0',
          'type' => 'epigenomics',
	  ...
	  ...
    }
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr>
        <td>400</td><td>Bad Request</td>
	<td>
	  Request cannot be fulfilled by the Registry. Possible reasons:
	  <ul>
	    <li>empty request body</li>
	    <li>trackDb entity does not belong to (i.e. has not been registered by) the user</li>
	    <li>trackDb configuration cannot be translated to <a href="[% c.uri_for('/docs/api/modelling') %]">valid JSON</a></li>
	    <li>a trackDb entity with the same hub and assembly exists</li>
	  </ul>
	</td>
      </tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>404</td><td>Not found</td><td>trackDb with the given ID does not exist</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="delete_trackdb">DELETE /api/trackdb/:id</h3>
  <p>
    Delete the trackDb with the given ID from the Registry.
  </p>
  <p>
    If the request is successful, the response body is a JSON object representing the deleted trackDb.
  </p>

  <h4>Notes</h4>
  <p>
    Alternatively, this operation can be done more simply using the <a href="[% c.uri_for('/docs/dashboard#status') %]">web interface</a>.
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <table class="table table-striped">
    <thead><tr><th>Name</th><th>Type</th><th>Description</th><th>Example Values</th></tr></thead>
    <tbody>
      <tr>
        <td>id</td>
	<td><var>String</var></td>
    	<td>A trackDb document ID</td>
	<td><var>gOGRzcTSRd2l0LMQTufS4w</var></td>
      </tr>	
    </tbody>
  </table>

  <h4>Example Request</h4>
  <pre>
    DELETE https://www.trackhubregistry.org/api/trackdb/knB1GHPYSdmeypb-R8sxhA
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    ...
    {
          'owner' => 'exampleuser',
          'created' => 1440778576,
          'version' => 'v1.0',
          'type' => 'epigenomics',
	  ...
	  ...
    }    
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr><td>400</td><td>Bad Request</td><td>trackDb entity does not belong to (i.e. has not been registered by) the user</td></tr
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>404</td><td>Not Found</td><td>Couldn't find the trackDb entity with the given ID</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
      <tr>
      </tr>
      <tr>
      </tr>
      <tr>
      </tr>
    </tbody>
  </table>

  <h3 id="logout">GET /api/logout</h3>
  <p>
    Logout and invalidate the current access token.    
  </p>
  <p>
    If the request is successful, the response body is a JSON object with message "Successfully logged out".
  </p>

  <h4>Resource Information</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Response formats</th>
	<td>JSON</td>
      </tr>
      <tr>
        <th>Authentication</th>
	<td>User+Auth-Token headers</td>
      </tr>
      <tr>
        <th>Rate Limited</th>
	<td>No</td>
      </tr>
    </tbody>
  </table>

  <h4>Parameters</h4>
  <p>None.</p>

  <h4>Example Request</h4>
  <pre>
    GET https://www.trackhubregistry.org/api/logout
    User: exampleuser
    Auth-Token: 6l5/GuIiOSCywuSI9HF1VU97clwb/CXPDFS0MyAB/HCZuxtjQBj4uORZL8NY3Yhi
  </pre>

  <h4>Example Response</h4>
  <pre>
    HTTP/1.0 200 OK
    ...
    { "message": "Successfully logged out" }
  </pre>

  <h4>HTTP Status Codes</h4>
  <table class="table" style="width: auto;">
    <tbody>
      <tr>
        <th>Code</th><th>Description</th><th>Reason</th>
      </tr>
      <tr><td>200</td><td>OK</td><td>Request successful</td></tr>
      <tr><td>401</td><td>Unauthorized</td><td>The request requires user authentication</td></tr>
      <tr><td>500</td><td>Internal Server Error</td><td>Request cannot be fulfilled due to unexpected condition</td></tr>
      <tr><td>503</td><td>Service Unavailable</td><td>Request cannot be fulfilled due to temporary overloading or maintenance of the server</td></tr>
    </tbody>
  </table>

  </div>
</div>
